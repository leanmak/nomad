# Generated by GPT

# Compiler and flags
CC = gcc
CFLAGS = -Wall -Wextra -g
LDFLAGS = -lws2_32

# Directories
SRC_DIR = src
SERVER_DIR = $(SRC_DIR)/server
THREADS_DIR = $(SRC_DIR)/threads
BUILD_DIR = build

# Source files
SRCS = $(SRC_DIR)/main.c \
       $(SERVER_DIR)/server.c \
       $(THREADS_DIR)/threads.c \
       $(SRC_DIR)/utils.c \
       $(SRC_DIR)/client/client.c

# Object files in build/
OBJS = $(SRCS:%.c=$(BUILD_DIR)/%.o)

# Output executable
TARGET = nomad.exe

# Default target
all: $(TARGET)

# Link objects into final binary
$(TARGET): $(OBJS)
	$(CC) $(CFLAGS) -o $@ $^ $(LDFLAGS)

# Compile rule: build/%.o depends on %.c
$(BUILD_DIR)/%.o: %.c
	@mkdir -p $(dir $@)
	$(CC) $(CFLAGS) -c $< -o $@

# Clean build artifacts
clean:
	rm -rf $(BUILD_DIR) $(TARGET)

.PHONY: all clean